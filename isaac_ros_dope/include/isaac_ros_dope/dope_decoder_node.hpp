/**
 * Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
 *
 * NVIDIA CORPORATION and its licensors retain all intellectual property
 * and proprietary rights in and to this software, related documentation
 * and any modifications thereto.  Any use, reproduction, disclosure or
 * distribution of this software and related documentation without an express
 * license agreement from NVIDIA CORPORATION is strictly prohibited.
 */
#ifndef ISAAC_ROS_DOPE__DOPE_DECODER_NODE_HPP_
#define ISAAC_ROS_DOPE__DOPE_DECODER_NODE_HPP_

#include <memory>
#include <string>

#include "geometry_msgs/msg/pose_array.hpp"
#include "isaac_ros_nvengine_interfaces/msg/tensor.hpp"
#include "isaac_ros_nvengine_interfaces/msg/tensor_list.hpp"
#include "message_filters/subscriber.h"
#include "message_filters/sync_policies/exact_time.h"
#include "rclcpp/rclcpp.hpp"


namespace isaac_ros
{
namespace dope
{

/**
 * @class DopeDecoderNode
 * @brief This node performs pose estimation of a known object from a single RGB
 *        image
 *        Paper: See https://arxiv.org/abs/1809.10790
 *        Code: https://github.com/NVlabs/Deep_Object_Pose
 */

class DopeDecoderNode : public rclcpp::Node
{
public:
  explicit DopeDecoderNode(rclcpp::NodeOptions options = rclcpp::NodeOptions());
  ~DopeDecoderNode();

private:
/**
 * @brief Callback to perform pose estimation via epnp and publish an array of
 *        object poses
 *
 * @param belief_maps_msg The array of belief map tensors generated by the DOPE DNN
 */
  void DopeDecoderCallback(
    const isaac_ros_nvengine_interfaces::msg::TensorList::ConstSharedPtr belief_maps_msg);

  // Queue size of the subscriber
  const int queue_size_;

  // Frame id that the message should be in
  const std::string header_frame_id_;

  // The name of the YAML configuration file
  const std::string config_filename_;
  // The class name of the object we're locating
  const std::string object_name_;

  // Subscribes to the array of Tensors (belief maps) that will be used to
  // compute object location
  rclcpp::Subscription<isaac_ros_nvengine_interfaces::msg::TensorList>::SharedPtr belief_maps_sub_;

  // Publishes the array of poses of detected objects
  rclcpp::Publisher<geometry_msgs::msg::PoseArray>::SharedPtr pub_;

  struct DopeDecoderImpl;
  std::unique_ptr<DopeDecoderImpl> impl_;  // Pointer to implementation
};

}  // namespace dope
}  // namespace isaac_ros

#endif  // ISAAC_ROS_DOPE__DOPE_DECODER_NODE_HPP_
